package mx.com.diegoA.vistas.vistaDistribuidor;

import mx.com.diegoA.vistas.vistaCliente.*;
import java.awt.Dialog;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import mx.com.diegoA.control.Icontrol.IManager;
import mx.com.diegoA.control.conexion.ctrlConexion;
import mx.com.diegoA.control.control.CtrlConfDireccionProveedor;
import mx.com.diegoA.control.control.CtrlConfEstados;
import mx.com.diegoA.control.control.CtrlConfMunicipios;
import mx.com.diegoA.control.control.CtrlConfTipoProveedor;
import mx.com.diegoA.entidad.entity.ConfDireccionProveedor;
import mx.com.diegoA.entidad.entity.ConfEstados;
import mx.com.diegoA.entidad.entity.ConfMunicipios;
import mx.com.diegoA.entidad.entity.ConfProveedor;
import mx.com.diegoA.entidad.entity.ConfTipoProveedor;
import mx.com.diegoA.vistas.Direccion.JdDireccionManager;
import mx.com.diegoA.vistas.Direccion.JdDireccionProveedorManager;

public class JdCDistribuidorManager extends javax.swing.JDialog implements IManager {

    //<editor-fold defaultstate="collapsed" desc="Cuerpo Distribuidor Manager">
    //<editor-fold defaultstate="collapsed" desc="Variables">
    private ctrlConexion conexion;
    private ConfProveedor baseEntity;
    private CtrlConfDireccionProveedor Direccion;
    private ConfDireccionProveedor entDir;
    private int idDireccion;
    private int idCliente = 0;
    private int idSexo;
    private int filac;
    private int idAccion = 0;
    boolean conCambios = false;
    private boolean camTxt = false;
    private boolean camCombo = false;
    private boolean camJTable = false;
    PreparedStatement consulta;
    ResultSet rConsulta;
    DefaultTableModel modTabla;
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="Constructor">
    /**
     * Creates new form JdClienteManager
     */
    public JdCDistribuidorManager(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public JdCDistribuidorManager() throws SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        conexion = new ctrlConexion();
        this.setLoadInformation();
        String[] head = {"ID", "idCliente", "IdEstado", "IdMunicipio", "Calle", "Colonia", "Estado", "Municipio"};
        Object[][] direccionrow = {};
        modTabla = new DefaultTableModel(direccionrow, head);
        this.jtDireccion.setModel(modTabla);
        jtDireccion.getColumn("ID").setPreferredWidth(0);
        jtDireccion.getColumn("ID").setMinWidth(0);
        jtDireccion.getColumn("ID").setMaxWidth(0);
        jtDireccion.getColumn("ID").setWidth(0);
        jtDireccion.getColumn("idCliente").setPreferredWidth(0);
        jtDireccion.getColumn("idCliente").setMinWidth(0);
        jtDireccion.getColumn("idCliente").setMaxWidth(0);
        jtDireccion.getColumn("idCliente").setWidth(0);
        jtDireccion.getColumn("IdEstado").setPreferredWidth(0);
        jtDireccion.getColumn("IdEstado").setMinWidth(0);
        jtDireccion.getColumn("IdEstado").setMaxWidth(0);
        jtDireccion.getColumn("IdEstado").setWidth(0);
        jtDireccion.getColumn("IdMunicipio").setPreferredWidth(0);
        jtDireccion.getColumn("IdMunicipio").setMinWidth(0);
        jtDireccion.getColumn("IdMunicipio").setMaxWidth(0);
        jtDireccion.getColumn("IdMunicipio").setWidth(0);
    }
    //</editor-fold>

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtDireccion = new javax.swing.JTable();
        txttelefonocel = new javax.swing.JTextField();
        txttelefonocasa = new javax.swing.JTextField();
        txtnombre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblAccion = new javax.swing.JLabel();
        btnAgregarD = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cbSexo = new javax.swing.JComboBox();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        lblRazonSocial = new javax.swing.JLabel();
        txtRazonSocial = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        btnAceptar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAceptar.setForeground(new java.awt.Color(51, 51, 51));
        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(51, 51, 51));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jtDireccion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtDireccion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtDireccionMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtDireccion);

        txttelefonocel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txttelefonocelMouseClicked(evt);
            }
        });

        txttelefonocasa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txttelefonocasaMouseClicked(evt);
            }
        });

        txtnombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtnombreMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Nombre:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Telefono Casa:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Telefono Celular:");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mx/com/diegoA/img/1412742102_Users_Group.png"))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Distribuidor-");

        lblAccion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblAccion.setForeground(new java.awt.Color(51, 51, 51));
        lblAccion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAccion.setText("Estado de operacion");

        btnAgregarD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAgregarD.setForeground(new java.awt.Color(51, 51, 51));
        btnAgregarD.setText("Agregar direcci√≥n");
        btnAgregarD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarDActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Tipo proveedor:");

        cbSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnEditar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(51, 51, 51));
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(51, 51, 51));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        lblRazonSocial.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblRazonSocial.setForeground(new java.awt.Color(102, 102, 102));
        lblRazonSocial.setText("Razon Social:");

        txtRazonSocial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtRazonSocialMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblAccion, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtRazonSocial))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAgregarD)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbSexo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtnombre, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txttelefonocasa, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txttelefonocel, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnAceptar)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancelar)))
                        .addGap(26, 26, 26))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lblAccion))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txttelefonocasa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txttelefonocel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRazonSocial)
                    .addComponent(txtRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarD)
                    .addComponent(btnEditar)
                    .addComponent(btnEliminar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAceptar)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //<editor-fold defaultstate="collapsed" desc="Botones y Eventos">
    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        try {
            this.DetectaCambioCombo();
            if (camCombo == true || camTxt == true || camJTable == true) {
                int res = JOptionPane.showConfirmDialog(null, "Has realizado Cambio, estas seguro de guardarlos");
                if (res == 0) {
                    JOptionPane.showMessageDialog(null, "Hubo un Cambio");
                    if (this.validaDatos() == true) {
                        this.baseEntity.setStrNombre(this.txtnombre.getText().trim());
                        this.baseEntity.setStrTelCasa(this.txttelefonocasa.getText().trim());
                        this.baseEntity.setStrTelCel(this.txttelefonocel.getText().trim());
                        this.baseEntity.setStrRazonSocial(this.txtRazonSocial.getText().trim());
                        //aqui falta la linea para obtener el combo seleccionado
                        if (this.idAccion == 0) {
                            this.baseEntity.setIdConfProveedor(this.cbSexo.getSelectedIndex());
                        } else {
                            this.baseEntity.setIdConfProveedor(this.cbSexo.getSelectedIndex() + 1);
                        }
                        //Generamos y guardamos el arraylist de direccion y lo mandamos de regreso              
                        ArrayList<ConfDireccionProveedor> lista = new ArrayList();
                        //aqui iba confdir
                        for (int i = 0; i < this.jtDireccion.getRowCount(); i++) {
                            this.entDir = new ConfDireccionProveedor();
                            entDir.setId((int) this.jtDireccion.getValueAt(i, 0));
                            entDir.setIdConfProveedor((int) this.jtDireccion.getValueAt(i, 1));
                            entDir.setStrValor((String) this.jtDireccion.getValueAt(i, 4));
                            entDir.setStrColonia((String) this.jtDireccion.getValueAt(i, 5));
                            entDir.setIdConfEstado((int) this.jtDireccion.getValueAt(i, 2));
                            entDir.setIdConfMunicipio((int) this.jtDireccion.getValueAt(i, 3));
                            lista.add(entDir);
                        }
                        this.baseEntity.setDireccion(lista);
                        //se cierra la pantalla
                        this.conCambios = false;
                        this.camCombo = false;
                        this.camJTable = false;
                        this.camTxt = false;
                        this.dispose();
                    }
                }
            } else {
                this.dispose();
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
            System.out.println(e.getLocalizedMessage());
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnAgregarDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarDActionPerformed
        // Agregar Direccion
        try {
            this.camJTable = true;
            JdDireccionProveedorManager manager;
            CtrlConfDireccionProveedor ctrlDir;
            ctrlDir = new CtrlConfDireccionProveedor();
            manager = new JdDireccionProveedorManager();
            Object objTemp = manager.showDialog(null);
            ConfDireccionProveedor conf = (ConfDireccionProveedor) objTemp;

            CtrlConfEstados estado = new CtrlConfEstados();
            ArrayList<Object> lista = estado.ConsultaEspecializada(conf.getIdConfEstado());
            ConfEstados tempObject = (ConfEstados) lista.get(0);

            CtrlConfMunicipios muni = new CtrlConfMunicipios();
            ArrayList<Object> lista2 = muni.ConsultaEspecializada(conf.getIdConfMunicipio());
            ConfMunicipios tempObject2 = (ConfMunicipios) lista2.get(0);

            if (objTemp != null) {
                //Verificamos
                Object cuerpo[] = {0, this.idCliente, conf.getIdConfEstado(), conf.getIdConfMunicipio(), conf.getStrValor(), conf.getStrColonia(), tempObject, tempObject2};
                this.modTabla.addRow(cuerpo);
//                System.out.println(""+muni.getNombre()+estado.getNombre());

            }
            //actualiza los datos del jtable de resultado

            this.jtDireccion.setRowSelectionInterval(0, 0);
        } catch (SQLException ex) {
            Logger.getLogger(JdClienteManager.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnAgregarDActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // Edita una direccion
        this.camJTable = true;
        int numerofilas = this.jtDireccion.getRowCount();
        System.out.println("El numero de filas es: " + numerofilas);
        if (this.jtDireccion.getRowCount() > 0) {
            try {
                JdDireccionManager mngrDir = new JdDireccionManager();
                ConfDireccionProveedor direccion = new ConfDireccionProveedor();
                this.filac = this.jtDireccion.getSelectedRow();
                direccion.setId((int) this.jtDireccion.getValueAt(filac, 0));
                direccion.setStrValor((String) this.jtDireccion.getValueAt(filac, 4));
                direccion.setStrColonia((String) this.jtDireccion.getValueAt(filac, 5));
                direccion.setIdConfEstado((int) this.jtDireccion.getValueAt(filac, 2));
                direccion.setIdConfMunicipio((int) this.jtDireccion.getValueAt(filac, 3));
                direccion.setIdConfProveedor(this.idCliente);
                Object objTemp = mngrDir.showDialog(direccion);
                ConfDireccionProveedor conf = (ConfDireccionProveedor) objTemp;
                if (conf != null) {
                    CtrlConfEstados estado = new CtrlConfEstados();
                    ArrayList<Object> lista = estado.ConsultaEspecializada(conf.getIdConfEstado());
                    ConfEstados tempObject = (ConfEstados) lista.get(0);

                    CtrlConfMunicipios muni = new CtrlConfMunicipios();
                    ArrayList<Object> lista2 = muni.ConsultaEspecializada(conf.getIdConfMunicipio());
                    ConfMunicipios tempObject2 = (ConfMunicipios) lista2.get(0);

                    this.jtDireccion.setValueAt(conf.getStrValor(), filac, 4);
                    this.jtDireccion.setValueAt(conf.getStrColonia(), filac, 5);
                    this.jtDireccion.setValueAt(conf.getIdConfEstado(), filac, 2);
                    this.jtDireccion.setValueAt(conf.getIdConfMunicipio(), filac, 3);
                    this.jtDireccion.setValueAt(tempObject, filac, 6);
                    this.jtDireccion.setValueAt(tempObject2, filac, 7);
                    jtDireccion.getColumn("ID").setPreferredWidth(0);
                    jtDireccion.getColumn("ID").setMinWidth(0);
                    jtDireccion.getColumn("ID").setMaxWidth(0);
                    jtDireccion.getColumn("ID").setWidth(0);
                    jtDireccion.getColumn("idCliente").setPreferredWidth(0);
                    jtDireccion.getColumn("idCliente").setMinWidth(0);
                    jtDireccion.getColumn("idCliente").setMaxWidth(0);
                    jtDireccion.getColumn("idCliente").setWidth(0);
                    jtDireccion.getColumn("IdEstado").setPreferredWidth(0);
                    jtDireccion.getColumn("IdEstado").setMinWidth(0);
                    jtDireccion.getColumn("IdEstado").setMaxWidth(0);
                    jtDireccion.getColumn("IdEstado").setWidth(0);
                    jtDireccion.getColumn("IdMunicipio").setPreferredWidth(0);
                    jtDireccion.getColumn("IdMunicipio").setMinWidth(0);
                    jtDireccion.getColumn("IdMunicipio").setMaxWidth(0);
                    jtDireccion.getColumn("IdMunicipio").setWidth(0);
                }

            } catch (SQLException ex) {
                Logger.getLogger(JdClienteManager.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No hay direcciones que editar", "Direccion", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // Devuelve null
        this.baseEntity = null;
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // Elimina
        if (this.jtDireccion.getRowCount() > 0) {
            if (this.idDireccion > 0) {
                int eliminar = JOptionPane.showConfirmDialog(null, "Estas seguro de eliminar la direccion", "Direccion registrada", JOptionPane.WARNING_MESSAGE);
                if (eliminar == 0) {
                    try {
                         this.camJTable = true;
                        Direccion = new CtrlConfDireccionProveedor();
                        ConfDireccionProveedor entDir = new ConfDireccionProveedor();
                        entDir.setId(this.idDireccion);
                        if (Direccion.Eliminar(entDir)) {
                            int elFila = this.jtDireccion.getSelectedRow();
                            this.modTabla.removeRow(elFila);
                            JOptionPane.showMessageDialog(null, "Registro borrado exitosamente", "Direccion", JOptionPane.INFORMATION_MESSAGE);
                        }
                    } catch (SQLException ex) {
                        Logger.getLogger(JdClienteManager.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } else {
                 this.camJTable = true;
                int elFila = this.jtDireccion.getSelectedRow();
                this.modTabla.removeRow(elFila);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No hay direcciones que borrar", "Direccion", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void jtDireccionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtDireccionMouseClicked
        // Asigna el id de la fila seleccionada
        if (this.jtDireccion.getRowCount() != -1) {
            int filadir = this.jtDireccion.getSelectedRow();
            this.idDireccion = (int) this.jtDireccion.getValueAt(filadir, 0);
            this.idCliente = (int) this.jtDireccion.getValueAt(filadir, 1);
            System.out.println(this.idDireccion);
        }
    }//GEN-LAST:event_jtDireccionMouseClicked

    private void txtnombreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtnombreMouseClicked
        // Llama al evento de cambio
        this.DetectaCambio(this.txtnombre);
    }//GEN-LAST:event_txtnombreMouseClicked

    private void txttelefonocasaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txttelefonocasaMouseClicked
        // Llama al evento de cambio
        this.DetectaCambio(this.txttelefonocasa);
    }//GEN-LAST:event_txttelefonocasaMouseClicked

    private void txttelefonocelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txttelefonocelMouseClicked
        // Llama al evento de cambio
        this.DetectaCambio(this.txttelefonocel);
    }//GEN-LAST:event_txttelefonocelMouseClicked

    private void txtRazonSocialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtRazonSocialMouseClicked
        // Llama al evento de cambio
        this.DetectaCambio(this.txtRazonSocial);
    }//GEN-LAST:event_txtRazonSocialMouseClicked
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="Main"> 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JdClienteManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JdClienteManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JdClienteManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JdClienteManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JdClienteManager dialog = new JdClienteManager(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="Declaracion de componentes">

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnAgregarD;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JComboBox cbSexo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtDireccion;
    private javax.swing.JLabel lblAccion;
    private javax.swing.JLabel lblRazonSocial;
    private javax.swing.JTextField txtRazonSocial;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextField txttelefonocasa;
    private javax.swing.JTextField txttelefonocel;
    // End of variables declaration//GEN-END:variables
//</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="Metodos Implementar">
    @Override
    public Object showDialog(Object _obj) {
        this.baseEntity = (ConfProveedor) _obj;
        this.idAccion = (this.baseEntity != null) ? this.baseEntity.getId() : 0;
        if (this.idAccion == 0) {
            this.baseEntity = new ConfProveedor();
        }
        this.idSexo = this.baseEntity.getIdConfProveedor();//obtener el id de estado para el combo de editar
        this.setLoadInformation();
        this.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
        //this.setBounds(600, 500, 500, 500);
        this.setVisible(true);
        return (this.baseEntity != null) ? this.baseEntity : null;
    }

    @Override
    public boolean validaDatos() {
        if (this.txtnombre.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "El campo de nombre se encuentra vacio");
            return false;
        }
        if (this.txtRazonSocial.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "El campo de Razon Social se encuentra vacio");
            return false;
        }
        if (this.idAccion == 0) {
            if (this.cbSexo.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Seleccione una opci√≥n valida de Sexo");
                return false;
            }
        }
        return true;
    }

    @Override
    public void setInformacion(int _id) {
        if (_id == 0) {
            this.lblAccion.setText("[Agregar]");
        } else {
            this.lblAccion.setText("[Editar]");
        }
    }

    @Override
    public void setEstatus() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Object getInformacion() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public boolean setComboBoxInitial() {
        DefaultComboBoxModel x = new DefaultComboBoxModel();
        try {
            CtrlConfTipoProveedor CSexo = new CtrlConfTipoProveedor();
            ArrayList<Object> list = CSexo.ConsultaEspecializada(null);
//            consulta = conexion.getCon().prepareStatement("Select * from conftipodistribuidor");
//            rConsulta = consulta.executeQuery();

            if (this.idAccion == 0) {
                //leyenda seleccionar
                x.addElement("SELECCIONA");
//                while (rConsulta.next()) {
//                    System.out.println(rConsulta.getString(2));
//                    x.addElement(rConsulta.getString("strValor"));
//                }
                for (int i = 0; i < list.size(); i++) {
                    ConfTipoProveedor SX = (ConfTipoProveedor) list.get(i);
                    x.addElement(SX);
                }

                cbSexo.setModel(x);
            } else {
//                while (rConsulta.next()) {
//                    System.out.println(rConsulta.getString(2));
//                    x.addElement(rConsulta.getString("strValor"));
//                }
                for (int i = 0; i < list.size(); i++) {
                    ConfTipoProveedor SX = (ConfTipoProveedor) list.get(i);
                    x.addElement(SX);
                }

                cbSexo.setModel(x);
                this.setComboBox();
            }

            return true;
        } catch (SQLException ex) {
            Logger.getLogger(JdClienteManager.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    }

    @Override
    public boolean setLoadInformation() {
        this.setInformacion(this.idAccion);
        if (this.setComboBoxInitial() == false) {
            this.dispose();
        }
        this.setTextField();
        this.setComboBox();
        this.setTabla();
        this.setFecha();
        this.setCheck();
        this.setExtra();

        return true;
    }

    @Override
    public void setComboBox() {
        if (this.idAccion > 0) {
            this.cbSexo.setSelectedIndex(this.idSexo - 1);
        }
    }

    @Override
    public void setTextField() {
        this.txtnombre.setText(((this.baseEntity != null) ? this.baseEntity.getStrNombre() : " "));
        this.txttelefonocasa.setText(((this.baseEntity != null) ? this.baseEntity.getStrTelCasa() : " "));
        this.txttelefonocel.setText(((this.baseEntity != null) ? this.baseEntity.getStrTelCel() : " "));
        this.txtRazonSocial.setText(((this.baseEntity != null) ? this.baseEntity.getStrRazonSocial() : " "));

    }

    @Override
    public void setFecha() {

    }

    @Override
    public void setTabla() {
        if (this.idAccion != 0) {
            try {

                CtrlConfDireccionProveedor ctrldir = new CtrlConfDireccionProveedor();
                ConfDireccionProveedor direcciones = new ConfDireccionProveedor();
                ArrayList<Object> lista = ctrldir.ConsultaCompleja(this.idAccion);

                for (int i = 0; i < lista.size(); i++) {
                    Object[] filaTemp = new Object[8];
                    ConfDireccionProveedor tempObject = (ConfDireccionProveedor) lista.get(i);

                    CtrlConfEstados estado = new CtrlConfEstados();
                    ArrayList<Object> lista2 = estado.ConsultaEspecializada(tempObject.getIdConfEstado());
                    ConfEstados tempObject2 = (ConfEstados) lista2.get(0);

                    CtrlConfMunicipios muni = new CtrlConfMunicipios();
                    ArrayList<Object> lista3 = muni.ConsultaEspecializada(tempObject.getIdConfMunicipio());
                    ConfMunicipios tempObject3 = (ConfMunicipios) lista3.get(0);

                    filaTemp[0] = tempObject.getId();
                    filaTemp[1] = tempObject.getIdConfProveedor();
                    filaTemp[2] = tempObject.getIdConfEstado();
                    filaTemp[3] = tempObject.getIdConfMunicipio();
                    filaTemp[4] = tempObject.getStrColonia();
                    filaTemp[5] = tempObject.getStrValor();
                    filaTemp[6] = tempObject2.getNombre();
                    filaTemp[7] = tempObject3.getNombre();

                    modTabla.addRow(filaTemp);
                    this.jtDireccion.setModel(modTabla);

                    jtDireccion.getColumn("ID").setPreferredWidth(0);
                    jtDireccion.getColumn("ID").setMinWidth(0);
                    jtDireccion.getColumn("ID").setMaxWidth(0);
                    jtDireccion.getColumn("ID").setWidth(0);
                    jtDireccion.getColumn("idCliente").setPreferredWidth(0);
                    jtDireccion.getColumn("idCliente").setMinWidth(0);
                    jtDireccion.getColumn("idCliente").setMaxWidth(0);
                    jtDireccion.getColumn("idCliente").setWidth(0);
                    jtDireccion.getColumn("IdEstado").setPreferredWidth(0);
                    jtDireccion.getColumn("IdEstado").setMinWidth(0);
                    jtDireccion.getColumn("IdEstado").setMaxWidth(0);
                    jtDireccion.getColumn("IdEstado").setWidth(0);
                    jtDireccion.getColumn("IdMunicipio").setPreferredWidth(0);
                    jtDireccion.getColumn("IdMunicipio").setMinWidth(0);
                    jtDireccion.getColumn("IdMunicipio").setMaxWidth(0);
                    jtDireccion.getColumn("IdMunicipio").setWidth(0);
                }
            } catch (SQLException ex) {
                Logger.getLogger(JdClienteManager.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    @Override
    public void setCheck() {

    }

    @Override
    public void setRadio() {

    }

    @Override
    public void setExtra() {

    }

    @Override
    public void huboCambio() {

    }

    //<editor-fold defaultstate="collapsed" desc="Detecta cambio combo: Evento">
    private void DetectaCambioCombo() {
        if (this.idAccion == 0) {
            if (this.cbSexo.getSelectedIndex() >= 0) {
                this.camCombo = true;
            }

        } else if (this.idAccion > 0) {

            ConfTipoProveedor x = (ConfTipoProveedor) cbSexo.getSelectedItem();
            System.out.println(x.getId() + this.baseEntity.getIdConfProveedor());
            if (x.getId() != this.baseEntity.getIdConfProveedor()) {
                this.camCombo = true;
            }
        }
    }
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="Detecta cambio ">
    private void DetectaCambio(JTextField txt) {
        DocumentListener documentListener = new DocumentListener() {

            @Override
            public void changedUpdate(DocumentEvent documentEvent) {
                camTxt = true;
            }

            @Override
            public void insertUpdate(DocumentEvent documentEvent) {
                camTxt = true;
            }

            @Override
            public void removeUpdate(DocumentEvent documentEvent) {
                camTxt = true;
            }
        };
        txt.getDocument().addDocumentListener(documentListener);

    }
    //</editor-fold>
    //</editor-fold>
//</editor-fold>
}
